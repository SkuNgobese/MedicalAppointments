@using MedicalAppointments.Interfaces
@using MedicalAppointments.Shared.Models
@using MedicalAppointments.Shared.ViewModels
@inject IHospital hospital
@page "/Hospitals"

<Button Color="ButtonColor.Success" @onclick="ShowModalFormAsync">Add Hospital</Button>

@if (errorModel != null)
{
    if (errorModel.Errors == null && !string.IsNullOrEmpty(errorModel.Message))
    {
        <ErrorDisplay Error="errorModel" />
    }
}

<Toasts class="p-3" Messages="messages" AutoHide="true" Delay="6000" Placement="ToastsPlacement.TopRight" />

<Modal @ref="modalForm" title="@(isEditing ? "Edit Hospital" : "New Hospital")" IsScrollable="true" Size="ModalSize.Large">
    <BodyTemplate>
        <ErrorDisplay Error="errorModel" />
        <EditForm Model="hospitalVM" OnValidSubmit="HandleValidSubmit" FormName="hospitalForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label class="form-label">Hospital Name</label>
                <InputText class="form-control" @bind-Value="hospitalVM.HospitalName" />
            </div>

            <div class="row">
                <div class="col-md-6">
                    <fieldset class="border p-3 rounded mb-3">
                        <legend class="float-none w-auto px-2">Address</legend>
                        <InputText class="form-control mb-2" @bind-Value="hospitalVM.AddressDetails!.Street" placeholder="Street" />
                        <InputText class="form-control mb-2" @bind-Value="hospitalVM.AddressDetails.Suburb" placeholder="Suburb" />
                        <InputText class="form-control mb-2" @bind-Value="hospitalVM.AddressDetails.City" placeholder="City" />
                        <InputText class="form-control mb-2" @bind-Value="hospitalVM.AddressDetails.PostalCode" placeholder="Postal Code" />
                        <InputText class="form-control mb-2" @bind-Value="hospitalVM.AddressDetails.Country" placeholder="Country" />
                    </fieldset>
                </div>

                <div class="col-md-6">
                    <fieldset class="border p-3 rounded mb-3">
                        <legend class="float-none w-auto px-2">Contact</legend>
                        <InputText class="form-control mb-2" @bind-Value="hospitalVM.ContactDetails!.ContactNumber" placeholder="Contact Number" />
                        <InputText class="form-control mb-2" @bind-Value="hospitalVM.ContactDetails.Email" placeholder="Email" />
                        <InputText class="form-control mb-2" @bind-Value="hospitalVM.ContactDetails.Fax" placeholder="Fax" />
                    </fieldset>
                </div>
            </div>
        </EditForm>
    </BodyTemplate>
    <FooterTemplate>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" @onclick="HideModalFormAsync">Cancel</button>
            <button type="submit" class="btn btn-primary" @onclick="HandleValidSubmit" disabled="@isSubmitting">
                @(isEditing ? "Update" : "Add") Hospital
            </button>
        </div>
    </FooterTemplate>
</Modal>
<br />
<hr />
@if (hospitals == null)
{
    <p>Loading hospitals...</p>
}
else if (!hospitals.Any())
{
    <p>No hospitals found.</p>
}
else
{
    <ul class="list-group">
        @foreach (var hospital in hospitals)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span>
                    <strong>@(hospital?.HospitalName)</strong> — @(hospital?.AddressDetails?.Suburb)
                </span>
                <span>
                    <button class="btn btn-sm btn-warning me-2" @onclick="() => EditHospital(hospital!)">Edit</button>
                    <button class="btn btn-sm btn-danger" @onclick="() => ConfirmDelete(hospital!)">Delete</button>
                </span>
            </li>
        }
    </ul>
}

<Modal @ref="modalDelete" title="Confirm Delete">
    <BodyTemplate>
        <ErrorDisplay Error="errorModel" />
        <p>Are you sure you want to delete <strong>@hospitalToDelete?.Name</strong>?</p>
    </BodyTemplate>
    <FooterTemplate>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
            <button type="submit" class="btn btn-danger" @onclick="DeleteConfirmed" disabled="@isSubmitting">
                Yes, Delete
            </button>
        </div>
    </FooterTemplate>
</Modal>