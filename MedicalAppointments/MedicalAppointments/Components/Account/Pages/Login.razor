@page "/Account/Login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@using System.ComponentModel.DataAnnotations
@using MedicalAppointments.Interfaces
@using MedicalAppointments.Services
@using MedicalAppointments.Shared.DTOs.Auth

<PageTitle>Log in</PageTitle>

<h1>Log in</h1>

<div class="row">
    <div class="col-lg-6">
        <section>
            <StatusMessage Message="@Message" />
            <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" />

                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" id="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label for="Input.Email" class="form-label">Email</label>
                    <ValidationMessage For="@(() => Input.Email)" class="text-danger" />
                </div>

                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.Password" id="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label for="Input.Password" class="form-label">Password</label>
                    <ValidationMessage For="@(() => Input.Password)" class="text-danger" />
                </div>

                <div class="checkbox mb-3">
                    <label class="form-label">
                        <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input" />
                        Remember me
                    </label>
                </div>

                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>

                @if (!string.IsNullOrWhiteSpace(Message))
                {
                    <p class="text-danger mt-2">@Message</p>
                }

                <div class="mt-3">
                    <a href="/Account/Register">Register as a new user</a><br />
                    <a href="/Account/ForgotPassword">Forgot your password?</a>
                </div>
            </EditForm>
        </section>
    </div>
</div>

@code {
    private LoginDto Input { get; set; } = new();
    private string? Message;

    private async Task LoginUser()
    {
        if (await AuthService.LoginAsync(Input))
            NavigationManager.NavigateTo("/");
        else
            Message = Message ?? "Invalid login.";
    }
}